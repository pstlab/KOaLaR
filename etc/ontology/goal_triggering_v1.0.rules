@prefix	rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#>.
@prefix ssn:	<http://purl.oclc.org/NET/ssnx/ssn#>.
@prefix dul:	<http://www.loa-cnr.it/ontologies/DUL.owl#>.
@prefix	koala:	<http://pst.istc.cnr.it/ontologies/2017/1/koala#>.

// assistive task inference

[pain-attack:
	(?p rdf:type koala:Patient),
	(?e1 rdf:type koala:HighBloodPressure), (?e1 koala:concerns ?p),
	(?e2 rdf:type koala:HighHeartRate), (?e2 koala:concerns ?p),
	makeSkolem(?condition, ?e1, ?e2), makeSkolem(?task, ?e1, ?e2)
	->
	print('[Goal] Inferring assistive task ', ?task, ' supporting assistive service ' koala:PainAttackMitigationService)
	(?condition rdf:type koala:ObservedSituation), (?condition dul:includesEvent ?e1), (?condition dul:includesEvent ?e2),  
	(?task rdf:type koala:PainAttackMitigationTask), (?task koala:hasPrecondition ?condition),
	(?task koala:supports koala:PainAttackMitigationService)]

[dietary-reminding-task:
	(?a rdf:type koala:Cooking), (?a koala:concerns ?k), (?k rdf:type koala:Kitchen),
	makeSkolem(?condition, ?a), makeSkolem(?task, ?a)
	->
	print('[Goal] Inferring assistive task ', ?task, ' supporting assistive service ' koala:DietaryRemindingService)
	(?condition rdf:type koala:ObservedSituation), (?condition dul:includesEvent ?a),
	(?task rdf:type koala:DietaryRemindingTask), (?task koala:hasPrecondition ?condition),
	(?task koala:supports koala:DietaryRemindingService)]

[bloodpressure-monitoring:
	(?p rdf:type koala:Patient),
	(?e rdf:type koala:HighBloodPressure), (?e koala:concerns ?p),
	makeSkolem(?condition, ?e), makeSkolem(?task, ?e)
	->
	print('[Goal] Inferring assistive task ', ?task, ' supporting assistive service ' koala:HearMonitoringService)
	(?condition rdf:type koala:ObservedSituation), (?condition dul:includesEvent ?e), 
	(?task rdf:type koala:PhysiologicalParameterMonitoringTask), (?task koala:hasPrecondition ?condition), 
	(?task koala:supports koala:HearMonitoringService)]

[heartrate-monitoring:
	(?p rdf:type koala:Patient),
	(?e rdf:type koala:HighHeartFrequency), (?e koala:concerns ?p),
	makeSkolem(?condition, ?e), makeSkolem(?task, ?e)
	->
	print('[Goal] Inferring assistive task ', ?task, ' supporting assistive service ' koala:HearMonitoringService)
	(?condition rdf:type koala:ObservedSituation), (?condition dul:includesEvent ?e),
	(?task rdf:type koala:PhysiologicalParameterMonitoringTask), (?task koala:hasPrecondition ?condition), 
	(?task koala:supports koala:HearMonitoringService)]




